(function() {
    'use strict';

    theApp
            .controller('AreaController', AreaController);

    AreaController.$inject = ['$scope', 'AreaService', '$filter', '$rootScope', '$uibModal', '$confirm', '$timeout', '$location'];
    function AreaController($scope, AreaService, $filter, $rootScope, $uibModal, $confirm, $timeout, $location) {
        $scope.listAreas = [];
        $scope.itemDisplayed = [];
        $scope.itemPerPage = 10;
        $scope.itemByPageList = [2, 10, 30, 50, 100];
        $scope.currentPage = 1;

        $scope.getListAreas = function(currentPage, itemPerPage) {
            var nameSearch = $scope.nameSearch;

            AreaService.getListAreas(nameSearch, currentPage, itemPerPage)
                    .then(function(response) {
                        if (response.err === 0) {
                            $scope.listAreas = response.dt.areas;
                            for (var i  in $scope.listAreas) {
                                $scope.listAreas[i].statusObj = $filter('filter')($rootScope.areaStatus, {areaStatusID: $scope.listAreas[i].status})[0];
                            }
                            $scope.totalAreas = response.dt.length;
                        }
                        else if (response.err === 101) {      // has not logged in
                            $location.path('/login');
                        } else {
//                            alert('Có lỗi xảy ra. Vui lòng thử lại sau.')
                        }
                    });

        };
        $scope.getListAreas($scope.currentPage, $scope.itemPerPage);

        $scope.changePageSize = function(itemPerPage) {
            $scope.currentPage = 1;
            $scope.getListAreas($scope.currentPage, itemPerPage);
        }

        $scope.deleteItems = function() {
            $scope.listItemIDDelete = [];
            for (var i in $scope.listAreas) {
                if ($scope.listAreas[i].delete_selected === true) {
                    $scope.listItemIDDelete.push($scope.listAreas[i].area_id);
                }
            }
            if ($scope.listItemIDDelete.length > 0) {
                $confirm({title: 'Xóa sản phẩm', text: 'Bạn có chắc chắn xóa thẻ ra khỏi hệ thống?'})
                        .then(function() {
                            AreaService.deleteItem($scope.listItemIDDelete)
                                    .then(function(response) {
                                        if (response.err === 0) {
                                            for (var i in $scope.listItemIDDelete) {
                                                for (var j in $scope.listAreas) {
                                                    if ($scope.listAreas[j].area_id === $scope.listItemIDDelete[i]) {
                                                        $scope.listAreas.splice(j, 1);
                                                    }
                                                }
                                            }
                                        }
                                    });
                        });
            }
        };

        $scope.openPopupAddItem = function(size) {
            var modalInstance = $uibModal.open({
                animation: true,
                templateUrl: 'area/area_detail.html',
                controller: 'AreaDetailController',
                size: size,
                resolve: {
                    index: -1,
                    item: {},
                    type: 1
                }
            });

            modalInstance.result.then(function(item) {
                $scope.listAreas = item.concat($scope.listAreas);
            });
        };

        $scope.openPopupEditItem = function(size, index, item) {
            var modalInstance = $uibModal.open({
                animation: true,
                templateUrl: 'area/area_detail.html',
                controller: 'AreaDetailController',
                size: size,
                resolve: {
                    index: function() {
                        return index;
                    },
                    item: function() {
                        return item;
                    },
                    type: 2
                }
            });
            modalInstance.result.then(function(item) {
                var i = 0;
                for (i = 0; i < $scope.listAreas.length; i++) {
                    if ($scope.listAreas[i].area_id === item.area_id) {
                        $scope.listAreas[i] = item;
                        $scope.itemDisplayed[index] = item;
                        break;
                    }
                }
            });
        };


        $scope.openLightboxModal = function(index) {
            Lightbox.openModal($scope.itemDisplayed, index);
        };

    }

    theApp.controller('AreaDetailController', AreaDetailController);
    AreaDetailController.$inject = ['$rootScope', '$scope', '$filter', '$uibModalInstance', 'AreaService', 'item', 'type'];
    function AreaDetailController($rootScope, $scope, $filter, $uibModalInstance, AreaService, item, type) {
        $scope.submitClicked = false;
        $scope.listNewItem = [];

        /*
         * type = 1: add new item
         * type = 2: edit item
         */
        if (type === 2) {
            $scope.newItem = jQuery.extend(true, {}, item);
            $scope.newItem.status_selected = $filter('filter')($rootScope.areaStatus, {areaStatusID: $scope.newItem.status})[0];
        } else {
            $scope.newItem = {};
            $scope.newItem.status_selected = $rootScope.areaStatus[0];
        }

        

        $scope.save = function() {
            $scope.submitClicked = true;
            if (!$scope.editForm.$valid) {
                alert('Dữ liệu không hợp lệ, vui lòng nhập lại');
                return;
            }

            $scope.clicked = true;
            $scope.newItem.status = $scope.newItem.status_selected.areaStatusID;
            delete($scope.newItem.status_selected);

            if (type === 2) {
                AreaService.editArea($scope.newItem, 'update')
                        .then(function(response) {
                            if (response.err === 0) {
                                $scope.newItem = response.dt.area;
                                $scope.newItem.statusObj = $filter('filter')($rootScope.areaStatus, {areaStatusID: $scope.newItem.status})[0];
                                $uibModalInstance.close($scope.newItem);

                            } else {
                                if (response.err === -1) {
                                    alert('Có lỗi xảy ra. Vui lòng thử lại sau');
                                }
                            }
                        });
            } else {
                AreaService.editArea($scope.newItem, 'add')
                        .then(function(response) {
                            $scope.clicked = false;
                            if (response.err === 0) {
                                $scope.newItem = response.dt.area;
                                $scope.newItem.statusObj = $filter('filter')($rootScope.areaStatus, {areaStatusID: $scope.newItem.status})[0];
                                $scope.listNewItem.push($scope.newItem);
                                $uibModalInstance.close($scope.listNewItem);

                            } else {
                                if (response.err === -1) {
                                    alert('Có lỗi xảy ra. Vui lòng thử lại sau');
                                }
                            }
                        });
            }

        };

        $scope.cancel = function() {
            $uibModalInstance.close($scope.listNewItem);

        };
    }


})();